---

- name: change EC2 instance state of Lab enviornment v1 
  hosts: localhost
  connection: local
  gather_facts: no
  collections:
    - amazon.aws
    - ansible.builtin
    - community.general

  vars_files: 
    - credentials.yml
  vars:
    #Your region
    #region: us-east-1
    region: "{{ which_region }}"

  tasks:

    - name: gather running instance information
      ec2_instance_info:
        region: "{{ region }}"
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        filters:
          "tag:stack": "{{ which_env }}"
      register: get_status
      tags: gather

    - name: Store subnet fact
      set_fact:
        mysubnet: "{{ get_status.instances|map(attribute='subnet_id') | join(',')}}"
      tags: get_subnet
      ignore_errors: True

    - name: Start my lab EC2 instances
      ec2_instance:
        region: "{{ region }}"
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        instance_ids: "{{ item.instance_id }}"
        instance_type: "{{ item.instance_type }}"
        wait: yes
        #vpc_subnet_id: "{{ mysubnet }}"
        state: running
      loop: "{{ get_status.instances }}"
      changed_when: True
      ignore_errors: True
      tags: start

    - name: Stop my lab EC2 instances
      ec2_instance:
        region: "{{ region }}"
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        instance_ids: "{{ item.instance_id }}"
        instance_type: "{{ item.instance_type }}"
        #vpc_subnet_id: "{{ mysubnet }}"
        state: stopped
      changed_when: True
      ignore_errors: True
      loop: "{{ get_status.instances }}"
      tags: stop

    - name: gather running instance information upon start
      ec2_instance_info:
        region: "{{ region }}"
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        filters:
          "tag:stack": "{{ which_env }}"
      register: get_status_on_start
      tags: gather_on_start

    - name: Print IP Addresses
      debug:
        var: item
      loop: "{{ get_status_on_start.instances | json_query('[*].public_ip_address') }}"
      tags: printip

    - name: Send IP Information and PEM Key info to user
      mail:
        host: smtp.gmail.com
        port: 587
        username: ben.forrester1976@gmail.com 
        #password: spqrgbrfbxnpnfuy
        password: "{{ my_gmail }}"
        to:  bforrest@redhat.com
        subject: Your EC2's are ready for use. See information to connect
        body: Test successful
      delegate_to: localhost
      tags: sendemail